
#include "DoubleWilsonMatrix.h"
#include "WilsonMatrix.h"
#include "Matrix.h"
#include "util.h"
#include <array>
#include <complex>

// This file was autogenerated by write_contractions_withG1_withsubtractions.py"

namespace ContractionsWithG1 {

 

// returns the 7x7 matrix giving the projection of each operator
// in the chiral basis on the 7 projectors.
// mixings[i-1][j-1] is the projection of Q''_i onto H_j
//
// The main program passes in the values of the 3 types of diagrams for
// each operator. The diagrams must already be amputated.
Matrix<std::complex<double>, 7> DoContractionsFourQuarkOpFourQuarkExt(
        const std::array<std::array<DoubleWilsonMatrix, 4>, 6> &amputated_diagrams,
        const std::array<DoubleWilsonMatrix, 7> &projector_spin_color_structures)
{
Matrix<std::complex<double>, 7> mixings;

DoubleWilsonMatrix amputated_G;
DoubleWilsonMatrix basic_amputated_G;
DoubleWilsonMatrix dsc;


////// Projection of operator Q''1 onto projector H1
amputated_G.Zero();

//// 2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// 2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


// finally project onto L (x) L (x) COLOR_DIAG
mixings[0][0] = projector_spin_color_structures[0].Project(amputated_G);



////// Projection of operator Q''1 onto projector H2
amputated_G.Zero();

//// 2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// 2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


// finally project onto L (x) L (x) COLOR_MIXED
mixings[0][1] = projector_spin_color_structures[1].Project(amputated_G);



////// Projection of operator Q''1 onto projector H3
amputated_G.Zero();

//// 2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// 2 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// 2 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// 2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// 2 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// 2 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-2 3-7 5-6 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-6 3-5 ; fully connected 3 -> op1 -> 0; 1 -> op2 -> 2 take fully connected A=L,B=L and swap 1/3
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-7 2-4 5-6 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op2 -> op1 -> 2 (so use A=L,B=L);
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-2 3-5 4-7 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-5 2-6 4-7 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op1 -> op2 -> 2 (so use A=L,B=L);
// loops:  ( 0 -> 3 -> 2 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-4 3-7 ; fully connected 1 -> op1 -> 2; 3 -> op2 -> 0 take fully connected A=L,B=L and swap 0/2
// loops:  ( 0 -> 6 -> 7 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


// finally project onto L (x) L (x) COLOR_DIAG
mixings[0][2] = projector_spin_color_structures[2].Project(amputated_G);



////// Projection of operator Q''1 onto projector H4
amputated_G.Zero();

//// 2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// 2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_DIAG
mixings[0][3] = projector_spin_color_structures[3].Project(amputated_G);



////// Projection of operator Q''1 onto projector H5
amputated_G.Zero();

//// 2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// 2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_MIXED
mixings[0][4] = projector_spin_color_structures[4].Project(amputated_G);



////// Projection of operator Q''1 onto projector H6
amputated_G.Zero();

//// 2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// 2 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// 2 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// 2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// 2 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// 2 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-2 3-7 5-6 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-6 3-5 ; fully connected 3 -> op1 -> 0; 1 -> op2 -> 2 take fully connected A=L,B=L and swap 1/3
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-7 2-4 5-6 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op2 -> op1 -> 2 (so use A=L,B=L);
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-2 3-5 4-7 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-5 2-6 4-7 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op1 -> op2 -> 2 (so use A=L,B=L);
// loops:  ( 0 -> 3 -> 2 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-4 3-7 ; fully connected 1 -> op1 -> 2; 3 -> op2 -> 0 take fully connected A=L,B=L and swap 0/2
// loops:  ( 0 -> 6 -> 7 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_DIAG
mixings[0][5] = projector_spin_color_structures[5].Project(amputated_G);



////// Projection of operator Q''1 onto projector H7
amputated_G.Zero();

//// 2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// 2 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// 2 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// 2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// 2 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// 2 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-2 3-7 5-6 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-6 3-5 ; fully connected 3 -> op1 -> 0; 1 -> op2 -> 2 take fully connected A=L,B=L and swap 1/3
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-7 2-4 5-6 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op2 -> op1 -> 2 (so use A=L,B=L);
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-2 3-5 4-7 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-5 2-6 4-7 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op1 -> op2 -> 2 (so use A=L,B=L);
// loops:  ( 0 -> 3 -> 2 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-4 3-7 ; fully connected 1 -> op1 -> 2; 3 -> op2 -> 0 take fully connected A=L,B=L and swap 0/2
// loops:  ( 0 -> 6 -> 7 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_MIXED
mixings[0][6] = projector_spin_color_structures[6].Project(amputated_G);



////// Projection of operator Q''2 onto projector H1
amputated_G.Zero();

//// 0.6 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// -0.4 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


// finally project onto L (x) L (x) COLOR_DIAG
mixings[1][0] = projector_spin_color_structures[0].Project(amputated_G);



////// Projection of operator Q''2 onto projector H2
amputated_G.Zero();

//// 0.6 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// -0.4 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


// finally project onto L (x) L (x) COLOR_MIXED
mixings[1][1] = projector_spin_color_structures[1].Project(amputated_G);



////// Projection of operator Q''2 onto projector H3
amputated_G.Zero();

//// 0.6 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// 0.6 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// 0.6 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// -0.4 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// -0.4 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// -0.4 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-2 3-7 5-6 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-6 3-5 ; fully connected 3 -> op1 -> 0; 1 -> op2 -> 2 take fully connected A=L,B=L and swap 1/3
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-7 2-4 5-6 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op2 -> op1 -> 2 (so use A=L,B=L);
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-2 3-5 4-7 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-5 2-6 4-7 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op1 -> op2 -> 2 (so use A=L,B=L);
// loops:  ( 0 -> 3 -> 2 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-4 3-7 ; fully connected 1 -> op1 -> 2; 3 -> op2 -> 0 take fully connected A=L,B=L and swap 0/2
// loops:  ( 0 -> 6 -> 7 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


// finally project onto L (x) L (x) COLOR_DIAG
mixings[1][2] = projector_spin_color_structures[2].Project(amputated_G);



////// Projection of operator Q''2 onto projector H4
amputated_G.Zero();

//// 0.6 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// -0.4 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_DIAG
mixings[1][3] = projector_spin_color_structures[3].Project(amputated_G);



////// Projection of operator Q''2 onto projector H5
amputated_G.Zero();

//// 0.6 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// -0.4 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_MIXED
mixings[1][4] = projector_spin_color_structures[4].Project(amputated_G);



////// Projection of operator Q''2 onto projector H6
amputated_G.Zero();

//// 0.6 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// 0.6 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// 0.6 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// -0.4 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// -0.4 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// -0.4 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-2 3-7 5-6 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-6 3-5 ; fully connected 3 -> op1 -> 0; 1 -> op2 -> 2 take fully connected A=L,B=L and swap 1/3
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-7 2-4 5-6 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op2 -> op1 -> 2 (so use A=L,B=L);
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-2 3-5 4-7 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-5 2-6 4-7 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op1 -> op2 -> 2 (so use A=L,B=L);
// loops:  ( 0 -> 3 -> 2 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-4 3-7 ; fully connected 1 -> op1 -> 2; 3 -> op2 -> 0 take fully connected A=L,B=L and swap 0/2
// loops:  ( 0 -> 6 -> 7 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_DIAG
mixings[1][5] = projector_spin_color_structures[5].Project(amputated_G);



////// Projection of operator Q''2 onto projector H7
amputated_G.Zero();

//// 0.6 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// 0.6 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// 0.6 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// -0.4 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// -0.4 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// -0.4 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-2 3-7 5-6 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-6 3-5 ; fully connected 3 -> op1 -> 0; 1 -> op2 -> 2 take fully connected A=L,B=L and swap 1/3
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-7 2-4 5-6 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op2 -> op1 -> 2 (so use A=L,B=L);
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-2 3-5 4-7 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-5 2-6 4-7 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op1 -> op2 -> 2 (so use A=L,B=L);
// loops:  ( 0 -> 3 -> 2 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-4 3-7 ; fully connected 1 -> op1 -> 2; 3 -> op2 -> 0 take fully connected A=L,B=L and swap 0/2
// loops:  ( 0 -> 6 -> 7 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_MIXED
mixings[1][6] = projector_spin_color_structures[6].Project(amputated_G);



////// Projection of operator Q''3 onto projector H1
amputated_G.Zero();

//// -0.4 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// 0.6 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


// finally project onto L (x) L (x) COLOR_DIAG
mixings[2][0] = projector_spin_color_structures[0].Project(amputated_G);



////// Projection of operator Q''3 onto projector H2
amputated_G.Zero();

//// -0.4 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// 0.6 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


// finally project onto L (x) L (x) COLOR_MIXED
mixings[2][1] = projector_spin_color_structures[1].Project(amputated_G);



////// Projection of operator Q''3 onto projector H3
amputated_G.Zero();

//// -0.4 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// -0.4 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// -0.4 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// 0.6 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// 0.6 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// 0.6 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-2 3-7 5-6 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-6 3-5 ; fully connected 3 -> op1 -> 0; 1 -> op2 -> 2 take fully connected A=L,B=L and swap 1/3
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-7 2-4 5-6 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op2 -> op1 -> 2 (so use A=L,B=L);
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-2 3-5 4-7 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-5 2-6 4-7 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op1 -> op2 -> 2 (so use A=L,B=L);
// loops:  ( 0 -> 3 -> 2 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-4 3-7 ; fully connected 1 -> op1 -> 2; 3 -> op2 -> 0 take fully connected A=L,B=L and swap 0/2
// loops:  ( 0 -> 6 -> 7 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


// finally project onto L (x) L (x) COLOR_DIAG
mixings[2][2] = projector_spin_color_structures[2].Project(amputated_G);



////// Projection of operator Q''3 onto projector H4
amputated_G.Zero();

//// -0.4 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// 0.6 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_DIAG
mixings[2][3] = projector_spin_color_structures[3].Project(amputated_G);



////// Projection of operator Q''3 onto projector H5
amputated_G.Zero();

//// -0.4 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// 0.6 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_MIXED
mixings[2][4] = projector_spin_color_structures[4].Project(amputated_G);



////// Projection of operator Q''3 onto projector H6
amputated_G.Zero();

//// -0.4 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// -0.4 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// -0.4 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// 0.6 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// 0.6 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// 0.6 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-2 3-7 5-6 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-6 3-5 ; fully connected 3 -> op1 -> 0; 1 -> op2 -> 2 take fully connected A=L,B=L and swap 1/3
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-7 2-4 5-6 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op2 -> op1 -> 2 (so use A=L,B=L);
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-2 3-5 4-7 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-5 2-6 4-7 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op1 -> op2 -> 2 (so use A=L,B=L);
// loops:  ( 0 -> 3 -> 2 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-4 3-7 ; fully connected 1 -> op1 -> 2; 3 -> op2 -> 0 take fully connected A=L,B=L and swap 0/2
// loops:  ( 0 -> 6 -> 7 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_DIAG
mixings[2][5] = projector_spin_color_structures[5].Project(amputated_G);



////// Projection of operator Q''3 onto projector H7
amputated_G.Zero();

//// -0.4 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// -0.4 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// -0.4 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// 0.6 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// 0.6 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// 0.6 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-2 3-7 5-6 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-6 3-5 ; fully connected 3 -> op1 -> 0; 1 -> op2 -> 2 take fully connected A=L,B=L and swap 1/3
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-7 2-4 5-6 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op2 -> op1 -> 2 (so use A=L,B=L);
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=L in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-2 3-5 4-7 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=L in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-5 2-6 4-7 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op1 -> op2 -> 2 (so use A=L,B=L);
// loops:  ( 0 -> 3 -> 2 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-4 3-7 ; fully connected 1 -> op1 -> 2; 3 -> op2 -> 0 take fully connected A=L,B=L and swap 0/2
// loops:  ( 0 -> 6 -> 7 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_MIXED
mixings[2][6] = projector_spin_color_structures[6].Project(amputated_G);



////// Projection of operator Q''4 onto projector H1
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto L (x) L (x) COLOR_DIAG
mixings[3][0] = projector_spin_color_structures[0].Project(amputated_G);



////// Projection of operator Q''4 onto projector H2
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto L (x) L (x) COLOR_MIXED
mixings[3][1] = projector_spin_color_structures[1].Project(amputated_G);



////// Projection of operator Q''4 onto projector H3
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-2 3-7 5-6 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-6 3-5 ; fully connected 3 -> op1 -> 0; 1 -> op2 -> 2 take fully connected A=L,B=R and swap 1/3
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-7 2-4 5-6 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op2 -> op1 -> 2 (so use A=L,B=R);
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-2 3-5 4-7 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-5 2-6 4-7 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op1 -> op2 -> 2 (so use A=R,B=L);
// loops:  ( 0 -> 3 -> 2 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-4 3-7 ; fully connected 1 -> op1 -> 2; 3 -> op2 -> 0 take fully connected A=L,B=R and swap 0/2
// loops:  ( 0 -> 6 -> 7 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto L (x) L (x) COLOR_DIAG
mixings[3][2] = projector_spin_color_structures[2].Project(amputated_G);



////// Projection of operator Q''4 onto projector H4
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_DIAG
mixings[3][3] = projector_spin_color_structures[3].Project(amputated_G);



////// Projection of operator Q''4 onto projector H5
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_MIXED
mixings[3][4] = projector_spin_color_structures[4].Project(amputated_G);



////// Projection of operator Q''4 onto projector H6
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-2 3-7 5-6 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-6 3-5 ; fully connected 3 -> op1 -> 0; 1 -> op2 -> 2 take fully connected A=L,B=R and swap 1/3
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-7 2-4 5-6 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op2 -> op1 -> 2 (so use A=L,B=R);
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-2 3-5 4-7 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-5 2-6 4-7 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op1 -> op2 -> 2 (so use A=R,B=L);
// loops:  ( 0 -> 3 -> 2 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-4 3-7 ; fully connected 1 -> op1 -> 2; 3 -> op2 -> 0 take fully connected A=L,B=R and swap 0/2
// loops:  ( 0 -> 6 -> 7 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_DIAG
mixings[3][5] = projector_spin_color_structures[5].Project(amputated_G);



////// Projection of operator Q''4 onto projector H7
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-2 3-7 5-6 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-6 3-5 ; fully connected 3 -> op1 -> 0; 1 -> op2 -> 2 take fully connected A=L,B=R and swap 1/3
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-7 2-4 5-6 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op2 -> op1 -> 2 (so use A=L,B=R);
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-2 3-5 4-7 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-5 2-6 4-7 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op1 -> op2 -> 2 (so use A=R,B=L);
// loops:  ( 0 -> 3 -> 2 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-4 3-7 ; fully connected 1 -> op1 -> 2; 3 -> op2 -> 0 take fully connected A=L,B=R and swap 0/2
// loops:  ( 0 -> 6 -> 7 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_MIXED
mixings[3][6] = projector_spin_color_structures[6].Project(amputated_G);



////// Projection of operator Q''5 onto projector H1
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto L (x) L (x) COLOR_DIAG
mixings[4][0] = projector_spin_color_structures[0].Project(amputated_G);



////// Projection of operator Q''5 onto projector H2
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto L (x) L (x) COLOR_MIXED
mixings[4][1] = projector_spin_color_structures[1].Project(amputated_G);



////// Projection of operator Q''5 onto projector H3
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-2 3-7 5-6 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-6 3-5 ; fully connected 3 -> op1 -> 0; 1 -> op2 -> 2 take fully connected A=L,B=R and swap 1/3
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-7 2-4 5-6 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op2 -> op1 -> 2 (so use A=L,B=R);
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-2 3-5 4-7 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-5 2-6 4-7 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op1 -> op2 -> 2 (so use A=R,B=L);
// loops:  ( 0 -> 3 -> 2 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-4 3-7 ; fully connected 1 -> op1 -> 2; 3 -> op2 -> 0 take fully connected A=L,B=R and swap 0/2
// loops:  ( 0 -> 6 -> 7 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto L (x) L (x) COLOR_DIAG
mixings[4][2] = projector_spin_color_structures[2].Project(amputated_G);



////// Projection of operator Q''5 onto projector H4
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_DIAG
mixings[4][3] = projector_spin_color_structures[3].Project(amputated_G);



////// Projection of operator Q''5 onto projector H5
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_MIXED
mixings[4][4] = projector_spin_color_structures[4].Project(amputated_G);



////// Projection of operator Q''5 onto projector H6
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-2 3-7 5-6 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-6 3-5 ; fully connected 3 -> op1 -> 0; 1 -> op2 -> 2 take fully connected A=L,B=R and swap 1/3
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-7 2-4 5-6 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op2 -> op1 -> 2 (so use A=L,B=R);
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-2 3-5 4-7 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-5 2-6 4-7 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op1 -> op2 -> 2 (so use A=R,B=L);
// loops:  ( 0 -> 3 -> 2 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-4 3-7 ; fully connected 1 -> op1 -> 2; 3 -> op2 -> 0 take fully connected A=L,B=R and swap 0/2
// loops:  ( 0 -> 6 -> 7 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_DIAG
mixings[4][5] = projector_spin_color_structures[5].Project(amputated_G);



////// Projection of operator Q''5 onto projector H7
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-2 3-7 5-6 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-6 3-5 ; fully connected 3 -> op1 -> 0; 1 -> op2 -> 2 take fully connected A=L,B=R and swap 1/3
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-7 2-4 5-6 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op2 -> op1 -> 2 (so use A=L,B=R);
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-2 3-5 4-7 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-5 2-6 4-7 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op1 -> op2 -> 2 (so use A=R,B=L);
// loops:  ( 0 -> 3 -> 2 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-4 3-7 ; fully connected 1 -> op1 -> 2; 3 -> op2 -> 0 take fully connected A=L,B=R and swap 0/2
// loops:  ( 0 -> 6 -> 7 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_MIXED
mixings[4][6] = projector_spin_color_structures[6].Project(amputated_G);



////// Projection of operator Q''6 onto projector H1
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


// finally project onto L (x) L (x) COLOR_DIAG
mixings[5][0] = projector_spin_color_structures[0].Project(amputated_G);



////// Projection of operator Q''6 onto projector H2
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


// finally project onto L (x) L (x) COLOR_MIXED
mixings[5][1] = projector_spin_color_structures[1].Project(amputated_G);



////// Projection of operator Q''6 onto projector H3
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-2 3-7 5-6 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-6 3-5 ; fully connected 3 -> op1 -> 0; 1 -> op2 -> 2 take fully connected A=L,B=R and swap 1/3
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-7 2-4 5-6 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op2 -> op1 -> 2 (so use A=L,B=R);
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-2 3-5 4-7 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-5 2-6 4-7 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op1 -> op2 -> 2 (so use A=R,B=L);
// loops:  ( 0 -> 3 -> 2 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-4 3-7 ; fully connected 1 -> op1 -> 2; 3 -> op2 -> 0 take fully connected A=L,B=R and swap 0/2
// loops:  ( 0 -> 6 -> 7 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


// finally project onto L (x) L (x) COLOR_DIAG
mixings[5][2] = projector_spin_color_structures[2].Project(amputated_G);



////// Projection of operator Q''6 onto projector H4
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_DIAG
mixings[5][3] = projector_spin_color_structures[3].Project(amputated_G);



////// Projection of operator Q''6 onto projector H5
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_MIXED
mixings[5][4] = projector_spin_color_structures[4].Project(amputated_G);



////// Projection of operator Q''6 onto projector H6
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-2 3-7 5-6 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-6 3-5 ; fully connected 3 -> op1 -> 0; 1 -> op2 -> 2 take fully connected A=L,B=R and swap 1/3
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-7 2-4 5-6 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op2 -> op1 -> 2 (so use A=L,B=R);
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-2 3-5 4-7 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-5 2-6 4-7 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op1 -> op2 -> 2 (so use A=R,B=L);
// loops:  ( 0 -> 3 -> 2 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-4 3-7 ; fully connected 1 -> op1 -> 2; 3 -> op2 -> 0 take fully connected A=L,B=R and swap 0/2
// loops:  ( 0 -> 6 -> 7 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_DIAG
mixings[5][5] = projector_spin_color_structures[5].Project(amputated_G);



////// Projection of operator Q''6 onto projector H7
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-2 3-7 5-6 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-6 3-5 ; fully connected 3 -> op1 -> 0; 1 -> op2 -> 2 take fully connected A=L,B=R and swap 1/3
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-7 2-4 5-6 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op2 -> op1 -> 2 (so use A=L,B=R);
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-2 3-5 4-7 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-5 2-6 4-7 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op1 -> op2 -> 2 (so use A=R,B=L);
// loops:  ( 0 -> 3 -> 2 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-4 3-7 ; fully connected 1 -> op1 -> 2; 3 -> op2 -> 0 take fully connected A=L,B=R and swap 0/2
// loops:  ( 0 -> 6 -> 7 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_MIXED
mixings[5][6] = projector_spin_color_structures[6].Project(amputated_G);



////// Projection of operator Q''7 onto projector H1
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


// finally project onto L (x) L (x) COLOR_DIAG
mixings[6][0] = projector_spin_color_structures[0].Project(amputated_G);



////// Projection of operator Q''7 onto projector H2
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


// finally project onto L (x) L (x) COLOR_MIXED
mixings[6][1] = projector_spin_color_structures[1].Project(amputated_G);



////// Projection of operator Q''7 onto projector H3
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-2 3-7 5-6 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-6 3-5 ; fully connected 3 -> op1 -> 0; 1 -> op2 -> 2 take fully connected A=L,B=R and swap 1/3
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-7 2-4 5-6 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op2 -> op1 -> 2 (so use A=L,B=R);
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-2 3-5 4-7 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-5 2-6 4-7 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op1 -> op2 -> 2 (so use A=R,B=L);
// loops:  ( 0 -> 3 -> 2 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-4 3-7 ; fully connected 1 -> op1 -> 2; 3 -> op2 -> 0 take fully connected A=L,B=R and swap 0/2
// loops:  ( 0 -> 6 -> 7 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


// finally project onto L (x) L (x) COLOR_DIAG
mixings[6][2] = projector_spin_color_structures[2].Project(amputated_G);



////// Projection of operator Q''7 onto projector H4
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_DIAG
mixings[6][3] = projector_spin_color_structures[3].Project(amputated_G);



////// Projection of operator Q''7 onto projector H5
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_MIXED
mixings[6][4] = projector_spin_color_structures[4].Project(amputated_G);



////// Projection of operator Q''7 onto projector H6
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-2 3-7 5-6 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-6 3-5 ; fully connected 3 -> op1 -> 0; 1 -> op2 -> 2 take fully connected A=L,B=R and swap 1/3
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-7 2-4 5-6 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op2 -> op1 -> 2 (so use A=L,B=R);
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-2 3-5 4-7 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-5 2-6 4-7 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op1 -> op2 -> 2 (so use A=R,B=L);
// loops:  ( 0 -> 3 -> 2 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-4 3-7 ; fully connected 1 -> op1 -> 2; 3 -> op2 -> 0 take fully connected A=L,B=R and swap 0/2
// loops:  ( 0 -> 6 -> 7 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_DIAG
mixings[6][5] = projector_spin_color_structures[5].Project(amputated_G);



////// Projection of operator Q''7 onto projector H7
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-2 3-7 5-6 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
// contract  0-4 1-7 2-6 3-5 ; fully connected 3 -> op1 -> 0; 1 -> op2 -> 2 take fully connected A=L,B=R and swap 1/3
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-7 2-4 5-6 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op2 -> op1 -> 2 (so use A=L,B=R);
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-2 3-5 6-7 ; spectator 1->2 (so swap 1/3); has disconnected loop: B=R in loop; 3 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap13();
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-2 3-5 4-7 ; spectator 1->2 (so swap 1/3); has connected loop: 3 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-3 1-5 2-4 6-7 ; spectator 3->0 (so swap 0/2); has disconnected loop: B=R in loop; 1 -> A=L -> 2
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc.Swap02();
basic_amputated_G += dsc;
// contract  0-3 1-5 2-6 4-7 ; spectator 3->0 (so swap 0/2); has connected loop: 1 -> op1 -> op2 -> 2 (so use A=R,B=L);
// loops:  ( 0 -> 3 -> 2 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
// contract  0-6 1-5 2-4 3-7 ; fully connected 1 -> op1 -> 2; 3 -> op2 -> 0 take fully connected A=L,B=R and swap 0/2
// loops:  ( 0 -> 6 -> 7 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_MIXED
mixings[6][6] = projector_spin_color_structures[6].Project(amputated_G);






return mixings;
}







// returns the 7x1 array giving the projection of each operator
// in the chiral basis onto the HF projector (the G1-like structure)
// mixings[i-1] is the projection of Q''_i onto HF
//
// The main program passes in the values of the 3 types of diagrams for
// each operator. The diagrams must already be amputated.
std::array<std::complex<double>, 7> DoContractionsFourQuarkOpHFExt(
        const std::array<std::array<DoubleWilsonMatrix, 4>, 6> &amputated_diagrams,
        const DoubleWilsonMatrix &HF_projector_spin_color_structure)
{
std::array<std::complex<double>, 7> mixings;

DoubleWilsonMatrix amputated_G;
DoubleWilsonMatrix basic_amputated_G;
DoubleWilsonMatrix dsc;


////// Projection of operator Q''1 onto projector HF
amputated_G.Zero();

//// 2 * <(s(0) dbar(1))(f(2) fbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// 2 * <(s(0) dbar(1))(f(2) fbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(f(2) fbar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(f(2) fbar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


// finally project onto L (x) V (x) COLOR_MIXED
mixings[0] = HF_projector_spin_color_structure.Project(amputated_G);



////// Projection of operator Q''2 onto projector HF
amputated_G.Zero();

//// 0.6 * <(s(0) dbar(1))(f(2) fbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// -0.4 * <(s(0) dbar(1))(f(2) fbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(f(2) fbar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(f(2) fbar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


// finally project onto L (x) V (x) COLOR_MIXED
mixings[1] = HF_projector_spin_color_structure.Project(amputated_G);



////// Projection of operator Q''3 onto projector HF
amputated_G.Zero();

//// -0.4 * <(s(0) dbar(1))(f(2) fbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// 0.6 * <(s(0) dbar(1))(f(2) fbar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(f(2) fbar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(f(2) fbar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


// finally project onto L (x) V (x) COLOR_MIXED
mixings[2] = HF_projector_spin_color_structure.Project(amputated_G);



////// Projection of operator Q''4 onto projector HF
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(f(2) fbar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(f(2) fbar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(f(2) fbar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto L (x) V (x) COLOR_MIXED
mixings[3] = HF_projector_spin_color_structure.Project(amputated_G);



////// Projection of operator Q''5 onto projector HF
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(f(2) fbar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(f(2) fbar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(f(2) fbar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto L (x) V (x) COLOR_MIXED
mixings[4] = HF_projector_spin_color_structure.Project(amputated_G);



////// Projection of operator Q''6 onto projector HF
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(f(2) fbar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(f(2) fbar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(f(2) fbar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


// finally project onto L (x) V (x) COLOR_MIXED
mixings[5] = HF_projector_spin_color_structure.Project(amputated_G);



////// Projection of operator Q''7 onto projector HF
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(f(2) fbar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(f(2) fbar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(f(2) fbar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


// finally project onto L (x) V (x) COLOR_MIXED
mixings[6] = HF_projector_spin_color_structure.Project(amputated_G);






return mixings;
}






// Computes the projected Green's functions of an operator with sbar-d flavor structure
// in the 7 standard external states.
std::array<std::complex<double>, 7> DoContractionsTwoQuarkOpFourQuarkExt(
        const DoubleWilsonMatrix &amputated_sd_diagram,
        const std::array<DoubleWilsonMatrix, 7> &projector_spin_color_structures)
{

std::array<std::complex<double>, 7> projected_greens_funcs;

DoubleWilsonMatrix amputated_G;
DoubleWilsonMatrix basic_amputated_G;
DoubleWilsonMatrix dsc;

////// Projection of sbar-d operator onto projector H1
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) d(5))>
basic_amputated_G.Zero();
//contract  0-4 1-5 2-3 ; // spectator 3->2 (so no swap)
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_sd_diagram;
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto L (x) L (x) COLOR_DIAG
projected_greens_funcs[0] = projector_spin_color_structures[0].Project(amputated_G);


////// Projection of sbar-d operator onto projector H2
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) d(5))>
basic_amputated_G.Zero();
//contract  0-4 1-5 2-3 ; // spectator 3->2 (so no swap)
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_sd_diagram;
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto L (x) L (x) COLOR_MIXED
projected_greens_funcs[1] = projector_spin_color_structures[1].Project(amputated_G);


////// Projection of sbar-d operator onto projector H3
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) d(5))>
basic_amputated_G.Zero();
//contract  0-4 1-5 2-3 ; // spectator 3->2 (so no swap)
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_sd_diagram;
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) d(5))>
basic_amputated_G.Zero();
//contract  0-4 1-2 3-5 ; // spectator 1->2 (so swap 1/3)
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_sd_diagram;
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
//contract  0-4 1-5 2-3 ; // spectator 3->2 (so no swap)
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_sd_diagram;
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) d(5))>
basic_amputated_G.Zero();
//contract  0-3 1-5 2-4 ; // spectator 3->0 (so swap 0/2)
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_sd_diagram;
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
//contract  0-4 1-5 2-3 ; // spectator 3->2 (so no swap)
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_sd_diagram;
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto L (x) L (x) COLOR_DIAG
projected_greens_funcs[2] = projector_spin_color_structures[2].Project(amputated_G);


////// Projection of sbar-d operator onto projector H4
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) d(5))>
basic_amputated_G.Zero();
//contract  0-4 1-5 2-3 ; // spectator 3->2 (so no swap)
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_sd_diagram;
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_DIAG
projected_greens_funcs[3] = projector_spin_color_structures[3].Project(amputated_G);


////// Projection of sbar-d operator onto projector H5
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) d(5))>
basic_amputated_G.Zero();
//contract  0-4 1-5 2-3 ; // spectator 3->2 (so no swap)
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_sd_diagram;
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_MIXED
projected_greens_funcs[4] = projector_spin_color_structures[4].Project(amputated_G);


////// Projection of sbar-d operator onto projector H6
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) d(5))>
basic_amputated_G.Zero();
//contract  0-4 1-5 2-3 ; // spectator 3->2 (so no swap)
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_sd_diagram;
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) d(5))>
basic_amputated_G.Zero();
//contract  0-4 1-2 3-5 ; // spectator 1->2 (so swap 1/3)
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_sd_diagram;
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
//contract  0-4 1-5 2-3 ; // spectator 3->2 (so no swap)
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_sd_diagram;
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) d(5))>
basic_amputated_G.Zero();
//contract  0-3 1-5 2-4 ; // spectator 3->0 (so swap 0/2)
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_sd_diagram;
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
//contract  0-4 1-5 2-3 ; // spectator 3->2 (so no swap)
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_sd_diagram;
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_DIAG
projected_greens_funcs[5] = projector_spin_color_structures[5].Project(amputated_G);


////// Projection of sbar-d operator onto projector H7
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) d(5))>
basic_amputated_G.Zero();
//contract  0-4 1-5 2-3 ; // spectator 3->2 (so no swap)
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_sd_diagram;
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(d(2) dbar(3))  x  (sbar(4) d(5))>
basic_amputated_G.Zero();
//contract  0-4 1-2 3-5 ; // spectator 1->2 (so swap 1/3)
// loops:  ( 0 -> 4 -> 5 -> 3 -> 2 -> 1 -> 0 )
dsc = amputated_sd_diagram;
dsc.Swap13();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
//contract  0-4 1-5 2-3 ; // spectator 3->2 (so no swap)
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_sd_diagram;
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(s(2) sbar(3))  x  (sbar(4) d(5))>
basic_amputated_G.Zero();
//contract  0-3 1-5 2-4 ; // spectator 3->0 (so swap 0/2)
// loops:  ( 0 -> 3 -> 2 -> 4 -> 5 -> 1 -> 0 )
dsc = amputated_sd_diagram;
dsc.Swap02();
dsc *= -1.0; // fermi statistics (1 loops)
basic_amputated_G += dsc;
//contract  0-4 1-5 2-3 ; // spectator 3->2 (so no swap)
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_sd_diagram;
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto L (x) R (x) COLOR_MIXED
projected_greens_funcs[6] = projector_spin_color_structures[6].Project(amputated_G);



return projected_greens_funcs;
}




// Returns the amputated Green's functions of each operator of the chiral
// basis in a two-quark s dbar external state.
std::array<WilsonMatrix, 7> DoContractionsFourQuarkOpTwoQuarkExt(
        const std::array<std::array<WilsonMatrix, 4>, 6> &amputated_twoq_diagrams)
{
std::array<WilsonMatrix, 7> chiral_basis_twoq_greens_functions;

WilsonMatrix twoq_amputated_G;
WilsonMatrix basic_twoq_amputated_G;
WilsonMatrix sc;


////// Green's function of operator Q''1 in two-quark external state
twoq_amputated_G.Zero();

//// (2.000000) * <(s(0) dbar(1))  x  (sbar(2) L d(3))(ubar(4) L u(5))_COLOR_DIAG>
basic_twoq_amputated_G.Zero();
// contract  0-2 1-3 4-5 ; disconnected loop, B=L in loop, 1 -> A=L -> 0
sc = amputated_twoq_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_twoq_amputated_G += sc;
twoq_amputated_G += (2.000000) * basic_twoq_amputated_G;


//// (2.000000) * <(s(0) dbar(1))  x  (sbar(2) L d(3))(ubar(4) L u(5))_COLOR_MIXED>
basic_twoq_amputated_G.Zero();
// contract  0-2 1-3 4-5 ; disconnected loop, B=L in loop, 1 -> A=L -> 0
sc = amputated_twoq_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
basic_twoq_amputated_G += sc;
twoq_amputated_G += (2.000000) * basic_twoq_amputated_G;


//// (-1.000000) * <(s(0) dbar(1))  x  (sbar(2) L d(3))(dbar(4) L d(5))_COLOR_DIAG>
basic_twoq_amputated_G.Zero();
// contract  0-2 1-3 4-5 ; disconnected loop, B=L in loop, 1 -> A=L -> 0
sc = amputated_twoq_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_twoq_amputated_G += sc;
// contract  0-2 1-5 3-4 ; connected loop, 1 -> B=L -> A=L -> 0
sc = amputated_twoq_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
sc *= -1.0; // fermi statistics
basic_twoq_amputated_G += sc;
twoq_amputated_G += (-1.000000) * basic_twoq_amputated_G;


//// (-1.000000) * <(s(0) dbar(1))  x  (sbar(2) L d(3))(sbar(4) L s(5))_COLOR_DIAG>
basic_twoq_amputated_G.Zero();
// contract  0-2 1-3 4-5 ; disconnected loop, B=L in loop, 1 -> A=L -> 0
sc = amputated_twoq_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_twoq_amputated_G += sc;
// contract  0-4 1-3 2-5 ; connected loop, 1 -> B=L -> A=L -> 0
sc = amputated_twoq_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
sc *= -1.0; // fermi statistics
basic_twoq_amputated_G += sc;
twoq_amputated_G += (-1.000000) * basic_twoq_amputated_G;


chiral_basis_twoq_greens_functions[0] = twoq_amputated_G;



////// Green's function of operator Q''2 in two-quark external state
twoq_amputated_G.Zero();

//// (0.600000) * <(s(0) dbar(1))  x  (sbar(2) L d(3))(ubar(4) L u(5))_COLOR_DIAG>
basic_twoq_amputated_G.Zero();
// contract  0-2 1-3 4-5 ; disconnected loop, B=L in loop, 1 -> A=L -> 0
sc = amputated_twoq_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_twoq_amputated_G += sc;
twoq_amputated_G += (0.600000) * basic_twoq_amputated_G;


//// (-0.400000) * <(s(0) dbar(1))  x  (sbar(2) L d(3))(ubar(4) L u(5))_COLOR_MIXED>
basic_twoq_amputated_G.Zero();
// contract  0-2 1-3 4-5 ; disconnected loop, B=L in loop, 1 -> A=L -> 0
sc = amputated_twoq_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
basic_twoq_amputated_G += sc;
twoq_amputated_G += (-0.400000) * basic_twoq_amputated_G;


//// (0.200000) * <(s(0) dbar(1))  x  (sbar(2) L d(3))(dbar(4) L d(5))_COLOR_DIAG>
basic_twoq_amputated_G.Zero();
// contract  0-2 1-3 4-5 ; disconnected loop, B=L in loop, 1 -> A=L -> 0
sc = amputated_twoq_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_twoq_amputated_G += sc;
// contract  0-2 1-5 3-4 ; connected loop, 1 -> B=L -> A=L -> 0
sc = amputated_twoq_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
sc *= -1.0; // fermi statistics
basic_twoq_amputated_G += sc;
twoq_amputated_G += (0.200000) * basic_twoq_amputated_G;


//// (0.200000) * <(s(0) dbar(1))  x  (sbar(2) L d(3))(sbar(4) L s(5))_COLOR_DIAG>
basic_twoq_amputated_G.Zero();
// contract  0-2 1-3 4-5 ; disconnected loop, B=L in loop, 1 -> A=L -> 0
sc = amputated_twoq_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_twoq_amputated_G += sc;
// contract  0-4 1-3 2-5 ; connected loop, 1 -> B=L -> A=L -> 0
sc = amputated_twoq_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
sc *= -1.0; // fermi statistics
basic_twoq_amputated_G += sc;
twoq_amputated_G += (0.200000) * basic_twoq_amputated_G;


chiral_basis_twoq_greens_functions[1] = twoq_amputated_G;



////// Green's function of operator Q''3 in two-quark external state
twoq_amputated_G.Zero();

//// (-0.400000) * <(s(0) dbar(1))  x  (sbar(2) L d(3))(ubar(4) L u(5))_COLOR_DIAG>
basic_twoq_amputated_G.Zero();
// contract  0-2 1-3 4-5 ; disconnected loop, B=L in loop, 1 -> A=L -> 0
sc = amputated_twoq_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_twoq_amputated_G += sc;
twoq_amputated_G += (-0.400000) * basic_twoq_amputated_G;


//// (0.600000) * <(s(0) dbar(1))  x  (sbar(2) L d(3))(ubar(4) L u(5))_COLOR_MIXED>
basic_twoq_amputated_G.Zero();
// contract  0-2 1-3 4-5 ; disconnected loop, B=L in loop, 1 -> A=L -> 0
sc = amputated_twoq_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
basic_twoq_amputated_G += sc;
twoq_amputated_G += (0.600000) * basic_twoq_amputated_G;


//// (0.200000) * <(s(0) dbar(1))  x  (sbar(2) L d(3))(dbar(4) L d(5))_COLOR_DIAG>
basic_twoq_amputated_G.Zero();
// contract  0-2 1-3 4-5 ; disconnected loop, B=L in loop, 1 -> A=L -> 0
sc = amputated_twoq_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_twoq_amputated_G += sc;
// contract  0-2 1-5 3-4 ; connected loop, 1 -> B=L -> A=L -> 0
sc = amputated_twoq_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
sc *= -1.0; // fermi statistics
basic_twoq_amputated_G += sc;
twoq_amputated_G += (0.200000) * basic_twoq_amputated_G;


//// (0.200000) * <(s(0) dbar(1))  x  (sbar(2) L d(3))(sbar(4) L s(5))_COLOR_DIAG>
basic_twoq_amputated_G.Zero();
// contract  0-2 1-3 4-5 ; disconnected loop, B=L in loop, 1 -> A=L -> 0
sc = amputated_twoq_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_twoq_amputated_G += sc;
// contract  0-4 1-3 2-5 ; connected loop, 1 -> B=L -> A=L -> 0
sc = amputated_twoq_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
sc *= -1.0; // fermi statistics
basic_twoq_amputated_G += sc;
twoq_amputated_G += (0.200000) * basic_twoq_amputated_G;


chiral_basis_twoq_greens_functions[2] = twoq_amputated_G;



////// Green's function of operator Q''4 in two-quark external state
twoq_amputated_G.Zero();

//// (1.000000) * <(s(0) dbar(1))  x  (sbar(2) L d(3))(ubar(4) R u(5))_COLOR_DIAG>
basic_twoq_amputated_G.Zero();
// contract  0-2 1-3 4-5 ; disconnected loop, B=R in loop, 1 -> A=L -> 0
sc = amputated_twoq_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_twoq_amputated_G += sc;
twoq_amputated_G += (1.000000) * basic_twoq_amputated_G;


//// (1.000000) * <(s(0) dbar(1))  x  (sbar(2) L d(3))(dbar(4) R d(5))_COLOR_DIAG>
basic_twoq_amputated_G.Zero();
// contract  0-2 1-3 4-5 ; disconnected loop, B=R in loop, 1 -> A=L -> 0
sc = amputated_twoq_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_twoq_amputated_G += sc;
// contract  0-2 1-5 3-4 ; connected loop, 1 -> B=R -> A=L -> 0
sc = amputated_twoq_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
sc *= -1.0; // fermi statistics
basic_twoq_amputated_G += sc;
twoq_amputated_G += (1.000000) * basic_twoq_amputated_G;


//// (1.000000) * <(s(0) dbar(1))  x  (sbar(2) L d(3))(sbar(4) R s(5))_COLOR_DIAG>
basic_twoq_amputated_G.Zero();
// contract  0-2 1-3 4-5 ; disconnected loop, B=R in loop, 1 -> A=L -> 0
sc = amputated_twoq_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_twoq_amputated_G += sc;
// contract  0-4 1-3 2-5 ; connected loop, 1 -> B=L -> A=R -> 0
sc = amputated_twoq_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
sc *= -1.0; // fermi statistics
basic_twoq_amputated_G += sc;
twoq_amputated_G += (1.000000) * basic_twoq_amputated_G;


chiral_basis_twoq_greens_functions[3] = twoq_amputated_G;



////// Green's function of operator Q''5 in two-quark external state
twoq_amputated_G.Zero();

//// (1.000000) * <(s(0) dbar(1))  x  (sbar(2) L d(3))(ubar(4) R u(5))_COLOR_MIXED>
basic_twoq_amputated_G.Zero();
// contract  0-2 1-3 4-5 ; disconnected loop, B=R in loop, 1 -> A=L -> 0
sc = amputated_twoq_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_twoq_amputated_G += sc;
twoq_amputated_G += (1.000000) * basic_twoq_amputated_G;


//// (1.000000) * <(s(0) dbar(1))  x  (sbar(2) L d(3))(dbar(4) R d(5))_COLOR_MIXED>
basic_twoq_amputated_G.Zero();
// contract  0-2 1-3 4-5 ; disconnected loop, B=R in loop, 1 -> A=L -> 0
sc = amputated_twoq_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_twoq_amputated_G += sc;
// contract  0-2 1-5 3-4 ; connected loop, 1 -> B=R -> A=L -> 0
sc = amputated_twoq_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
sc *= -1.0; // fermi statistics
basic_twoq_amputated_G += sc;
twoq_amputated_G += (1.000000) * basic_twoq_amputated_G;


//// (1.000000) * <(s(0) dbar(1))  x  (sbar(2) L d(3))(sbar(4) R s(5))_COLOR_MIXED>
basic_twoq_amputated_G.Zero();
// contract  0-2 1-3 4-5 ; disconnected loop, B=R in loop, 1 -> A=L -> 0
sc = amputated_twoq_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_twoq_amputated_G += sc;
// contract  0-4 1-3 2-5 ; connected loop, 1 -> B=L -> A=R -> 0
sc = amputated_twoq_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
sc *= -1.0; // fermi statistics
basic_twoq_amputated_G += sc;
twoq_amputated_G += (1.000000) * basic_twoq_amputated_G;


chiral_basis_twoq_greens_functions[4] = twoq_amputated_G;



////// Green's function of operator Q''6 in two-quark external state
twoq_amputated_G.Zero();

//// (1.000000) * <(s(0) dbar(1))  x  (sbar(2) L d(3))(ubar(4) R u(5))_COLOR_DIAG>
basic_twoq_amputated_G.Zero();
// contract  0-2 1-3 4-5 ; disconnected loop, B=R in loop, 1 -> A=L -> 0
sc = amputated_twoq_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_twoq_amputated_G += sc;
twoq_amputated_G += (1.000000) * basic_twoq_amputated_G;


//// (-0.500000) * <(s(0) dbar(1))  x  (sbar(2) L d(3))(dbar(4) R d(5))_COLOR_DIAG>
basic_twoq_amputated_G.Zero();
// contract  0-2 1-3 4-5 ; disconnected loop, B=R in loop, 1 -> A=L -> 0
sc = amputated_twoq_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_twoq_amputated_G += sc;
// contract  0-2 1-5 3-4 ; connected loop, 1 -> B=R -> A=L -> 0
sc = amputated_twoq_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
sc *= -1.0; // fermi statistics
basic_twoq_amputated_G += sc;
twoq_amputated_G += (-0.500000) * basic_twoq_amputated_G;


//// (-0.500000) * <(s(0) dbar(1))  x  (sbar(2) L d(3))(sbar(4) R s(5))_COLOR_DIAG>
basic_twoq_amputated_G.Zero();
// contract  0-2 1-3 4-5 ; disconnected loop, B=R in loop, 1 -> A=L -> 0
sc = amputated_twoq_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_twoq_amputated_G += sc;
// contract  0-4 1-3 2-5 ; connected loop, 1 -> B=L -> A=R -> 0
sc = amputated_twoq_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
sc *= -1.0; // fermi statistics
basic_twoq_amputated_G += sc;
twoq_amputated_G += (-0.500000) * basic_twoq_amputated_G;


chiral_basis_twoq_greens_functions[5] = twoq_amputated_G;



////// Green's function of operator Q''7 in two-quark external state
twoq_amputated_G.Zero();

//// (1.000000) * <(s(0) dbar(1))  x  (sbar(2) L d(3))(ubar(4) R u(5))_COLOR_MIXED>
basic_twoq_amputated_G.Zero();
// contract  0-2 1-3 4-5 ; disconnected loop, B=R in loop, 1 -> A=L -> 0
sc = amputated_twoq_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_twoq_amputated_G += sc;
twoq_amputated_G += (1.000000) * basic_twoq_amputated_G;


//// (-0.500000) * <(s(0) dbar(1))  x  (sbar(2) L d(3))(dbar(4) R d(5))_COLOR_MIXED>
basic_twoq_amputated_G.Zero();
// contract  0-2 1-3 4-5 ; disconnected loop, B=R in loop, 1 -> A=L -> 0
sc = amputated_twoq_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_twoq_amputated_G += sc;
// contract  0-2 1-5 3-4 ; connected loop, 1 -> B=R -> A=L -> 0
sc = amputated_twoq_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
sc *= -1.0; // fermi statistics
basic_twoq_amputated_G += sc;
twoq_amputated_G += (-0.500000) * basic_twoq_amputated_G;


//// (-0.500000) * <(s(0) dbar(1))  x  (sbar(2) L d(3))(sbar(4) R s(5))_COLOR_MIXED>
basic_twoq_amputated_G.Zero();
// contract  0-2 1-3 4-5 ; disconnected loop, B=R in loop, 1 -> A=L -> 0
sc = amputated_twoq_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_twoq_amputated_G += sc;
// contract  0-4 1-3 2-5 ; connected loop, 1 -> B=L -> A=R -> 0
sc = amputated_twoq_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
sc *= -1.0; // fermi statistics
basic_twoq_amputated_G += sc;
twoq_amputated_G += (-0.500000) * basic_twoq_amputated_G;


chiral_basis_twoq_greens_functions[6] = twoq_amputated_G;






return chiral_basis_twoq_greens_functions;
}





// Computes the projected Green's function of an operator with sbar-d flavor structure
// in the HF (G1-like) external state.
std::complex<double> DoContractionTwoQuarkOpHFExt(
        const DoubleWilsonMatrix &amputated_sd_diagram,
        const DoubleWilsonMatrix &HF_projector_spin_color_structure)
{

return HF_projector_spin_color_structure.Project(amputated_sd_diagram);

}





 

// returns the 7x7 matrix giving the projection of each operator
// in the chiral basis on the 7 projectors.
// mixings[i-1][j-1] is the projection of Q''_i onto H_j
//
// The main program passes in the values of the 3 types of diagrams for
// each operator. The diagrams must already be amputated.
Matrix<std::complex<double>, 7> DoQslashContractionsFourQuarkOpFourQuarkExt(
        const std::array<std::array<DoubleWilsonMatrix, 4>, 6> &amputated_diagrams,
        const std::array<DoubleWilsonMatrix, 7> &projector_spin_color_structures)
{
Matrix<std::complex<double>, 7> mixings;

DoubleWilsonMatrix amputated_G;
DoubleWilsonMatrix basic_amputated_G;
DoubleWilsonMatrix dsc;


////// Projection of operator Q''1 onto projector P_{(27,1),1}
amputated_G.Zero();

//// 2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// 2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (2.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


//// -1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-1.000000) * basic_amputated_G;


// finally project onto P_{(27,1),1}
mixings[0][0] = projector_spin_color_structures[0].Project(amputated_G);




// skipping projection of Q''1 onto P_{(8,1),2} (different reps)
mixings[0][1] = 0.0;


// skipping projection of Q''1 onto P_{(8,1),3} (different reps)
mixings[0][2] = 0.0;


// skipping projection of Q''1 onto P_{(8,1),5} (different reps)
mixings[0][3] = 0.0;


// skipping projection of Q''1 onto P_{(8,1),6} (different reps)
mixings[0][4] = 0.0;


// skipping projection of Q''1 onto P_{(8,8),7} (different reps)
mixings[0][5] = 0.0;


// skipping projection of Q''1 onto P_{(8,8),8} (different reps)
mixings[0][6] = 0.0;


// skipping projection of Q''2 onto P_{(27,1),1} (different reps)
mixings[1][0] = 0.0;

////// Projection of operator Q''2 onto projector P_{(8,1),2}
amputated_G.Zero();

//// 0.6 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// -0.4 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


// finally project onto P_{(8,1),2}
mixings[1][1] = projector_spin_color_structures[1].Project(amputated_G);



////// Projection of operator Q''2 onto projector P_{(8,1),3}
amputated_G.Zero();

//// 0.6 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// -0.4 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


// finally project onto P_{(8,1),3}
mixings[1][2] = projector_spin_color_structures[2].Project(amputated_G);



////// Projection of operator Q''2 onto projector P_{(8,1),5}
amputated_G.Zero();

//// 0.6 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// -0.4 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


// finally project onto P_{(8,1),5}
mixings[1][3] = projector_spin_color_structures[3].Project(amputated_G);



////// Projection of operator Q''2 onto projector P_{(8,1),6}
amputated_G.Zero();

//// 0.6 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// -0.4 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


// finally project onto P_{(8,1),6}
mixings[1][4] = projector_spin_color_structures[4].Project(amputated_G);




// skipping projection of Q''2 onto P_{(8,8),7} (different reps)
mixings[1][5] = 0.0;


// skipping projection of Q''2 onto P_{(8,8),8} (different reps)
mixings[1][6] = 0.0;


// skipping projection of Q''3 onto P_{(27,1),1} (different reps)
mixings[2][0] = 0.0;

////// Projection of operator Q''3 onto projector P_{(8,1),2}
amputated_G.Zero();

//// -0.4 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// 0.6 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


// finally project onto P_{(8,1),2}
mixings[2][1] = projector_spin_color_structures[1].Project(amputated_G);



////// Projection of operator Q''3 onto projector P_{(8,1),3}
amputated_G.Zero();

//// -0.4 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// 0.6 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


// finally project onto P_{(8,1),3}
mixings[2][2] = projector_spin_color_structures[2].Project(amputated_G);



////// Projection of operator Q''3 onto projector P_{(8,1),5}
amputated_G.Zero();

//// -0.4 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// 0.6 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


// finally project onto P_{(8,1),5}
mixings[2][3] = projector_spin_color_structures[3].Project(amputated_G);



////// Projection of operator Q''3 onto projector P_{(8,1),6}
amputated_G.Zero();

//// -0.4 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (-0.400000) * basic_amputated_G;


//// 0.6 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) L u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=L
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.600000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) L d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


//// 0.2 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) L s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=L in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLL];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=L,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLL];
basic_amputated_G += dsc;
amputated_G += (0.200000) * basic_amputated_G;


// finally project onto P_{(8,1),6}
mixings[2][4] = projector_spin_color_structures[4].Project(amputated_G);




// skipping projection of Q''3 onto P_{(8,8),7} (different reps)
mixings[2][5] = 0.0;


// skipping projection of Q''3 onto P_{(8,8),8} (different reps)
mixings[2][6] = 0.0;


// skipping projection of Q''4 onto P_{(27,1),1} (different reps)
mixings[3][0] = 0.0;

////// Projection of operator Q''4 onto projector P_{(8,1),2}
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto P_{(8,1),2}
mixings[3][1] = projector_spin_color_structures[1].Project(amputated_G);



////// Projection of operator Q''4 onto projector P_{(8,1),3}
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto P_{(8,1),3}
mixings[3][2] = projector_spin_color_structures[2].Project(amputated_G);



////// Projection of operator Q''4 onto projector P_{(8,1),5}
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto P_{(8,1),5}
mixings[3][3] = projector_spin_color_structures[3].Project(amputated_G);



////// Projection of operator Q''4 onto projector P_{(8,1),6}
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto P_{(8,1),6}
mixings[3][4] = projector_spin_color_structures[4].Project(amputated_G);




// skipping projection of Q''4 onto P_{(8,8),7} (different reps)
mixings[3][5] = 0.0;


// skipping projection of Q''4 onto P_{(8,8),8} (different reps)
mixings[3][6] = 0.0;


// skipping projection of Q''5 onto P_{(27,1),1} (different reps)
mixings[4][0] = 0.0;

////// Projection of operator Q''5 onto projector P_{(8,1),2}
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto P_{(8,1),2}
mixings[4][1] = projector_spin_color_structures[1].Project(amputated_G);



////// Projection of operator Q''5 onto projector P_{(8,1),3}
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto P_{(8,1),3}
mixings[4][2] = projector_spin_color_structures[2].Project(amputated_G);



////// Projection of operator Q''5 onto projector P_{(8,1),5}
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto P_{(8,1),5}
mixings[4][3] = projector_spin_color_structures[3].Project(amputated_G);



////// Projection of operator Q''5 onto projector P_{(8,1),6}
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


// finally project onto P_{(8,1),6}
mixings[4][4] = projector_spin_color_structures[4].Project(amputated_G);




// skipping projection of Q''5 onto P_{(8,8),7} (different reps)
mixings[4][5] = 0.0;


// skipping projection of Q''5 onto P_{(8,8),8} (different reps)
mixings[4][6] = 0.0;


// skipping projection of Q''6 onto P_{(27,1),1} (different reps)
mixings[5][0] = 0.0;


// skipping projection of Q''6 onto P_{(8,1),2} (different reps)
mixings[5][1] = 0.0;


// skipping projection of Q''6 onto P_{(8,1),3} (different reps)
mixings[5][2] = 0.0;


// skipping projection of Q''6 onto P_{(8,1),5} (different reps)
mixings[5][3] = 0.0;


// skipping projection of Q''6 onto P_{(8,1),6} (different reps)
mixings[5][4] = 0.0;

////// Projection of operator Q''6 onto projector P_{(8,8),7}
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


// finally project onto P_{(8,8),7}
mixings[5][5] = projector_spin_color_structures[5].Project(amputated_G);



////// Projection of operator Q''6 onto projector P_{(8,8),8}
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaLR];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_DIAG>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_DIAG][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_DIAG][GammaRL];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


// finally project onto P_{(8,8),8}
mixings[5][6] = projector_spin_color_structures[6].Project(amputated_G);




// skipping projection of Q''7 onto P_{(27,1),1} (different reps)
mixings[6][0] = 0.0;


// skipping projection of Q''7 onto P_{(8,1),2} (different reps)
mixings[6][1] = 0.0;


// skipping projection of Q''7 onto P_{(8,1),3} (different reps)
mixings[6][2] = 0.0;


// skipping projection of Q''7 onto P_{(8,1),5} (different reps)
mixings[6][3] = 0.0;


// skipping projection of Q''7 onto P_{(8,1),6} (different reps)
mixings[6][4] = 0.0;

////// Projection of operator Q''7 onto projector P_{(8,8),7}
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


// finally project onto P_{(8,8),7}
mixings[6][5] = projector_spin_color_structures[5].Project(amputated_G);



////// Projection of operator Q''7 onto projector P_{(8,8),8}
amputated_G.Zero();

//// 1 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(ubar(6) R u(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-5 2-6 3-7 ; fully connected 1 -> op1 -> 0; 3 -> op2 -> 2 take fully connected A=L,B=R
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 6 -> 7 -> 3 -> 2 )
dsc = amputated_diagrams[FULLY_CONNECTED_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (1.000000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(dbar(6) R d(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-4 1-7 2-3 5-6 ; spectator 3->2; has connected loop: 1 -> op2 -> op1 -> 0 (so use A=L,B=R);
// loops:  ( 0 -> 4 -> 5 -> 6 -> 7 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaLR];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


//// -0.5 * <(s(0) dbar(1))(u(2) ubar(3))  x  (sbar(4) L d(5))(sbar(6) R s(7))_COLOR_MIXED>
basic_amputated_G.Zero();
// contract  0-4 1-5 2-3 6-7 ; spectator 3->2; has disconnected loop: B=R in loop; 1 -> A=L -> 0
// loops:  ( 0 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 ) ( 6 -> 7 -> 6 )
dsc = amputated_diagrams[DISCONNECTED_LOOP_COLOR_MIXED][GammaLR];
dsc *= -1.0; // fermi statistics (3 loops)
basic_amputated_G += dsc;
// contract  0-6 1-5 2-3 4-7 ; spectator 3->2; has connected loop: 1 -> op1 -> op2 -> 0 (so use A=R,B=L);
// loops:  ( 0 -> 6 -> 7 -> 4 -> 5 -> 1 -> 0 ) ( 2 -> 3 -> 2 )
dsc = amputated_diagrams[CONNECTED_LOOP_COLOR_MIXED][GammaRL];
basic_amputated_G += dsc;
amputated_G += (-0.500000) * basic_amputated_G;


// finally project onto P_{(8,8),8}
mixings[6][6] = projector_spin_color_structures[6].Project(amputated_G);






return mixings;
}






// Computes the projected Green's functions of an operator with sbar-d flavor structure
// in the 7 standard external states.
std::array<std::complex<double>, 7> DoQslashContractionsTwoQuarkOpFourQuarkExt(
        const DoubleWilsonMatrix &amputated_sd_diagram,
        const std::array<DoubleWilsonMatrix, 7> &projector_spin_color_structures)
{

std::array<std::complex<double>, 7> projected_greens_funcs;


// Skipping projection of sbar-d operator onto %s since sbar-d ops are in (8,1)
projected_greens_funcs[0] = 0.0;

////// Projection of sbar-d operator onto projector P_{(8,1),2}
projected_greens_funcs[1] = projector_spin_color_structures[1].Project(amputated_sd_diagram);


////// Projection of sbar-d operator onto projector P_{(8,1),3}
projected_greens_funcs[2] = projector_spin_color_structures[2].Project(amputated_sd_diagram);


////// Projection of sbar-d operator onto projector P_{(8,1),5}
projected_greens_funcs[3] = projector_spin_color_structures[3].Project(amputated_sd_diagram);


////// Projection of sbar-d operator onto projector P_{(8,1),6}
projected_greens_funcs[4] = projector_spin_color_structures[4].Project(amputated_sd_diagram);


// Skipping projection of sbar-d operator onto %s since sbar-d ops are in (8,1)
projected_greens_funcs[5] = 0.0;

// Skipping projection of sbar-d operator onto %s since sbar-d ops are in (8,1)
projected_greens_funcs[6] = 0.0;


return projected_greens_funcs;
}




} // end namespace

